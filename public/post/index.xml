<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 北溪入江流</title>
    <link>/post/</link>
    <description>Recent content in Posts on 北溪入江流</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 01 Mar 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git文件.gitignore和.gitkeep用法解析</title>
      <link>/post/version_management_git/git%E6%96%87%E4%BB%B6.gitignore%E5%92%8C.gitkeep%E7%94%A8%E6%B3%95%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/post/version_management_git/git%E6%96%87%E4%BB%B6.gitignore%E5%92%8C.gitkeep%E7%94%A8%E6%B3%95%E8%A7%A3%E6%9E%90/</guid>
      <description>.gitignore：告诉 git 管理工具，需要忽略那些不需要被跟踪的文件或目录 .gitkeep：无意义，起到占位符的作用，git 在进行版本管理时</description>
    </item>
    <item>
      <title>Git配置SSH公钥</title>
      <link>/post/version_management_git/git%E9%85%8D%E7%BD%AEssh%E5%85%AC%E9%92%A5/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      <guid>/post/version_management_git/git%E9%85%8D%E7%BD%AEssh%E5%85%AC%E9%92%A5/</guid>
      <description>生成添加ssh公匙 在GitBash界面按照如下命令生成公匙 1 ssh-keygen -t rsa -C &amp;#34;xxxxx@xxxxx.com&amp;#34; -t： Type，指定要创建密钥的类型 rsa：通过rsa加密算法生成的密</description>
    </item>
    <item>
      <title>Hugo博客教程（一）</title>
      <link>/post/blog/hugo/hugo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%E4%B8%80/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      <guid>/post/blog/hugo/hugo%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%E4%B8%80/</guid>
      <description>Hugo博客教程（一） 博客 静态博客 静态博客是指利用生成工具（如：Hugo、Hexo）等将博文编译成静态文件的一种博客系统。博主只需要将生成文</description>
    </item>
    <item>
      <title>Git分支管理</title>
      <link>/post/version_management_git/git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>/post/version_management_git/git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/</guid>
      <description>Git分支管理 Git常用分支包括： master，hotfix，bugfix，release，develop，feature。 master：项</description>
    </item>
    <item>
      <title>Git初始化配置</title>
      <link>/post/version_management_git/git%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>/post/version_management_git/git%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE/</guid>
      <description>Git配置 Git 提供了一个叫做 git config 的工具，专门用来配置或读取相应的工作环境变量。 这些环境变量，决定了 Git 在各个环节的具体工作方式和行为。这些变量具</description>
    </item>
    <item>
      <title>计算机视觉实验：边缘提取与特征检测</title>
      <link>/post/opencv/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AE%9E%E9%AA%8C%E8%BE%B9%E7%BC%98%E6%8F%90%E5%8F%96%E4%B8%8E%E7%89%B9%E5%BE%81%E6%A3%80%E6%B5%8B/</link>
      <pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate>
      <guid>/post/opencv/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AE%9E%E9%AA%8C%E8%BE%B9%E7%BC%98%E6%8F%90%E5%8F%96%E4%B8%8E%E7%89%B9%E5%BE%81%E6%A3%80%E6%B5%8B/</guid>
      <description>一：实验内容 掌握python进行图像处理、了解opencv-python库的使用 基于robert、prewitt、sobel算子完成图像边缘</description>
    </item>
    <item>
      <title>应用层</title>
      <link>/post/network/%E5%BA%94%E7%94%A8%E5%B1%82/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      <guid>/post/network/%E5%BA%94%E7%94%A8%E5%B1%82/</guid>
      <description>网络应用模型 客户/服务器模型（C/S） 在客户/服务器模型（Client/Server，C/S）中，总是有一个打开的主机称为服务器，它服务于许</description>
    </item>
    <item>
      <title>传输层</title>
      <link>/post/network/%E4%BC%A0%E8%BE%93%E5%B1%82/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      <guid>/post/network/%E4%BC%A0%E8%BE%93%E5%B1%82/</guid>
      <description>传输层提供的服务 传输层的功能 传输层向应用层提供通信服务，属于面向通信部分的最高层，是用户功能中的最低层。为运行在不同的主机上的进程之间提供逻</description>
    </item>
    <item>
      <title>网络层</title>
      <link>/post/network/%E7%BD%91%E7%BB%9C%E5%B1%82/</link>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
      <guid>/post/network/%E7%BD%91%E7%BB%9C%E5%B1%82/</guid>
      <description>网络层的功能 网络层的设计思路：向上提供简单灵活的、无连接的、尽最大努力交付的数据报服务。即所传送的分组可能出错、丢失、重复、失序或超时。 这种</description>
    </item>
    <item>
      <title>数据链路层</title>
      <link>/post/network/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</link>
      <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
      <guid>/post/network/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</guid>
      <description>数据链路层的功能 数据链路层的主要作用将物理层提供的可能出错的物理连接改造成逻辑上无差错的数据链路，使之对网络层变现为一条无差错的链路。 为网络</description>
    </item>
    <item>
      <title>物理层</title>
      <link>/post/network/%E7%89%A9%E7%90%86%E5%B1%82/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate>
      <guid>/post/network/%E7%89%A9%E7%90%86%E5%B1%82/</guid>
      <description>通信基础 信道、信号、宽带、码元、波特、速率、信道容量等基本概念 数据、信号与码元 数据：数据是指传送信息的实体。 信号：数据的电气或电磁表现，是数</description>
    </item>
    <item>
      <title>计算机网络体系结构</title>
      <link>/post/network/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate>
      <guid>/post/network/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</guid>
      <description>计算机网络的概念、组成与功能 计算机网络的概念 计算机网络：计算机网络是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功</description>
    </item>
    <item>
      <title>视频流传输协议</title>
      <link>/post/opencv/%E8%A7%86%E9%A2%91%E6%B5%81%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      <guid>/post/opencv/%E8%A7%86%E9%A2%91%E6%B5%81%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/</guid>
      <description>常见视频传输协议 协议 httpflv rtmp rtsp hls dash 传输方式 http流 tcp流 tcp流 http http 视频封装格式 flv flv tag ts mp4 Ts文件 Mp4 3gp webm 延时 低 低 低 高 高 数据分段 连续流 连续流 连</description>
    </item>
    <item>
      <title>基于OpenCv的视频流处理方法</title>
      <link>/post/opencv/%E5%9F%BA%E4%BA%8Eopencv%E7%9A%84%E8%A7%86%E9%A2%91%E6%B5%81%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate>
      <guid>/post/opencv/%E5%9F%BA%E4%BA%8Eopencv%E7%9A%84%E8%A7%86%E9%A2%91%E6%B5%81%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</guid>
      <description>使用VideoCapture读取视频流 在使用OpenCv处理视频时，无论是视频文件还是摄像头画面，都要使用VideoCapture类来进行每</description>
    </item>
    <item>
      <title>OpenCv-cv2.imshow()显示图片不全</title>
      <link>/post/opencv/opencv-cv2.imshow%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E4%B8%8D%E5%85%A8/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      <guid>/post/opencv/opencv-cv2.imshow%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E4%B8%8D%E5%85%A8/</guid>
      <description>问题： 在使用cv2.imshow()显示图片时，只能显示图片的部分内容，无法完全显示图片内容。 原因： 查看cv2.imshow()函数说明可知</description>
    </item>
    <item>
      <title>基于OpenCv&#43;Django的网络实时视频流传输（前后端分离）</title>
      <link>/post/opencv/%E5%9F%BA%E4%BA%8Eopencv-django%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%9E%E6%97%B6%E8%A7%86%E9%A2%91%E6%B5%81%E4%BC%A0%E8%BE%93%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      <guid>/post/opencv/%E5%9F%BA%E4%BA%8Eopencv-django%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%9E%E6%97%B6%E8%A7%86%E9%A2%91%E6%B5%81%E4%BC%A0%E8%BE%93%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/</guid>
      <description>使用OpenCv捕获摄像机画面后，我们有时候需要将画面显示在界面上。本博客基于Django的前后端分离模式，将视频流从后端读取，传送给前端显</description>
    </item>
    <item>
      <title>OpenCv读取中文路径</title>
      <link>/post/opencv/opencv%E8%AF%BB%E5%8F%96%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      <guid>/post/opencv/opencv%E8%AF%BB%E5%8F%96%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84/</guid>
      <description>问题： 在使用cv2.imread()读取含有中文路径的图片时，无法正常读取图片，读取到的内容为None。 原因： opencv在使用cv2.im</description>
    </item>
  </channel>
</rss>
